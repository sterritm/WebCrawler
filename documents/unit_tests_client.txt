Unit Tests:

Graphs (no keyword)):
1) Single node, no edges
{
    "URLs": {
        "0": {
            "edges": [], 
            "found": false, 
            "title": "title0"
        }
    }, 
    "cookie": "graph 1", 
    "start": "0"
}

2) 0 nodes
{
    "URLs": {}, 
    "cookie": "graph 2", 
    "start": ""
}

3) Two nodes, 1 edge
{
    "URLs": {
        "0": {
            "edges": [
                "1"
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "graph 3", 
    "start": "0"
}

4) Two nodes, 2 edges loop
{
    "URLs": {
        "0": {
            "edges": [
                "1"
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [
                "0"
            ], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "graph 4", 
    "start": "0"
}

6) 3 nodes, 2 edges, linked list formats
{
    "URLs": {
        "0": {
            "edges": [
                "1"
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [
                "2"
            ], 
            "found": false, 
            "title": "title1"
        }, 
        "2": {
            "edges": [], 
            "found": false, 
            "title": "title2"
        }
    }, 
    "cookie": "graph 6", 
    "start": "0"
}

7) 3 nodes, 2 edges, tree format
{
    "URLs": {
        "0": {
            "edges": [
                "1", 
                "2"
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }, 
        "2": {
            "edges": [], 
            "found": false, 
            "title": "title2"
        }
    }, 
    "cookie": "graph 7", 
    "start": "0"
}

8) 3 nodes, 3 edges, last node points back to first node
{
    "URLs": {
        "0": {
            "edges": [
                "1"
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [
                "2"
            ], 
            "found": false, 
            "title": "title1"
        }, 
        "2": {
            "edges": [
                "0"
            ], 
            "found": false, 
            "title": "title2"
        }
    }, 
    "cookie": "graph 8", 
    "start": "0"
}
9) Two nodes, 0 edges
{
    "URLs": {
        "0": {
            "edges": [], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "graph 9", 
    "start": "0"
}
10) 4 nodes, 3 edges, linked list to tree
{
    "URLs": {
        "0": {
            "edges": [
                "1"
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [
                "2", 
                "3"
            ], 
            "found": false, 
            "title": "title1"
        }, 
        "2": {
            "edges": [], 
            "found": false, 
            "title": "title2"
        }, 
        "3": {
            "edges": [], 
            "found": false, 
            "title": "title3"
        }
    }, 
    "cookie": "graph 10", 
    "start": "0"
}
11) 1 node, 1 edge pointing to itself
{
    "URLs": {
        "0": {
            "edges": [
                "0"
            ], 
            "found": false, 
            "title": "title0"
        }
    }, 
    "cookie": "graph 11", 
    "start": "0"
}
12) 3 nodes, edge to every node possible (heavily populated)
{
    "URLs": {
        "0": {
            "edges": [
                "1", 
                "2"
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [
                "0", 
                "2""
            ], 
            "found": false, 
            "title": "title1"
        }, 
        "2": {
            "edges": [
                "0", 
                "1"
            ], 
            "found": false, 
            "title": "title2"
        }
    }, 
    "cookie": "graph 12", 
    "start": "0"
}

Graphs keyword:
1) 1 node, keyword
{
    "URLs": {
        "0": {
            "edges": [], 
            "found": true, 
            "title": "title0"
        }
    }, 
    "cookie": "keyword 1", 
    "start": "0"
}

2) 2 nodes, 1 edge, keyword on second
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": true, 
            "title": "title1"
        }
    }, 
    "cookie": "keyword 2", 
    "start": "0"
}

3) 2 nodes, 1 edge, keyword on first
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": true, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "keyword 3", 
    "start": "0"
}

4) 3 nodes, 2 edges, keyword in middle
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [
                2
            ], 
            "found": true, 
            "title": "title1"
        }, 
        "2": {
            "edges": [], 
            "found": false, 
            "title": "title2"
        }
    }, 
    "cookie": "keyword 4", 
    "start": "0"
}

5) 2 nodes, 1 edge, keyword found on both
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": true, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": true, 
            "title": "title1"
        }
    }, 
    "cookie": "keyword 5", 
    "start": "0"
}

6) 3 nodes, 2 edges, keyword found on two
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": true, 
            "title": "title0"
        }, 
        "1": {
            "edges": [
                2
            ], 
            "found": false, 
            "title": "title1"
        }, 
        "2": {
            "edges": [], 
            "found": true, 
            "title": "title2"
        }
    }, 
    "cookie": "keyword 6", 
    "start": "0"
}


Invalid graph formats:
1) invalid data format

node, invalid edge (should be string)
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": false, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "graph 3", 
    "start": "0"
}

invalid found (should be boolean)
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "invalid ", 
    "start": "0"
}

invalid title
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
            "title": true
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "invalid title", 
    "start": "0"
}

invalid cookie
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": 12345, 
    "start": "0"
}

invalid start (node doesn't exist')
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "invalid start", 
    "start": "5"
}

2) node missing title
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "missing title", 
    "start": "0"
}

3) node missing URL
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
			"title": "title0"
        }, 
        : {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "missing title", 
    "start": "0"
}

Invalid JSON formats:
4) start URL missing
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "cookie": "no start", 
}

5) No URLs
{
    "cookie": "no urls", 
    "start": "0"
}

6) No cookie sent
{
    "URLs": {
        "0": {
            "edges": [
                1
            ], 
            "found": 0, 
            "title": "title0"
        }, 
        "1": {
            "edges": [], 
            "found": false, 
            "title": "title1"
        }
    }, 
    "start": "0"
}